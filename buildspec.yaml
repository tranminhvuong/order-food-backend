version: 0.2

batch:
  fast-fail: true
  # build-list:
  # build-matrix:
  # build-graph:

phases:
  install:
    on-failure: ABORT
    runtime-versions:
      nodejs: 16.x
    commands:
      - yarn
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ECR_REGISTRY
      - REPOSITORY_URI=${AWS_ECR_REGISTRY}/${AWS_ECR_REPOSITORY}
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - aws s3 cp s3://${S3_CONFIG_BUCKET_URI} .
  build:
    on-failure: ABORT
    commands:
      - docker build -t $AWS_ECR_REGISTRY/$AWS_ECR_REPOSITORY:$IMAGE_TAG -t $AWS_ECR_REGISTRY/$AWS_ECR_REPOSITORY:latest -f docker/node/Dockerfile .
      - echo "::set-output name=image::$AWS_ECR_REGISTRY/$AWS_ECR_REPOSITORY:$IMAGE_TAG"
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - echo '[{"name":"${AWS_ECS_CONTAINER_NAME}","imageUri":"${REPOSITORY_URI}:${IMAGE_TAG}"}]' > imagedefinitions.json
artifacts:
  files: imagedefinitions.json
